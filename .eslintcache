[{"/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/index.js":"1","/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/App.js":"2","/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/reportWebVitals.js":"3","/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/store/reducer.js":"4","/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/store/actions.js":"5","/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/components/TopBar/TopBar.js":"6","/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/containers/BookedFlights/BookedFlights.js":"7","/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/containers/FlightSelector/FlightSelector.js":"8","/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/components/Modal/Modal.js":"9","/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/components/BookedFlight/BookedFlight.js":"10","/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/components/AvailableFlights/AvailableFlights.js":"11","/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/components/SelectFlight/SelectFlight.js":"12","/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/components/Flight/Flight.js":"13","/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/components/FlightOptions/FlightOptions.js":"14"},{"size":688,"mtime":1631554918976,"results":"15","hashOfConfig":"16"},{"size":1004,"mtime":1643403881037,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1631554918976,"results":"18","hashOfConfig":"16"},{"size":6198,"mtime":1631554918976,"results":"19","hashOfConfig":"16"},{"size":795,"mtime":1631554918976,"results":"20","hashOfConfig":"16"},{"size":265,"mtime":1631554918975,"results":"21","hashOfConfig":"16"},{"size":4225,"mtime":1631554918976,"results":"22","hashOfConfig":"16"},{"size":1002,"mtime":1631554918976,"results":"23","hashOfConfig":"16"},{"size":387,"mtime":1631554918975,"results":"24","hashOfConfig":"16"},{"size":649,"mtime":1631554918975,"results":"25","hashOfConfig":"16"},{"size":2986,"mtime":1643567674974,"results":"26","hashOfConfig":"16"},{"size":8712,"mtime":1631554918975,"results":"27","hashOfConfig":"16"},{"size":360,"mtime":1631554918975,"results":"28","hashOfConfig":"16"},{"size":494,"mtime":1631554918975,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"sqmpls",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/index.js",[],["61","62"],"/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/App.js",[],"/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/reportWebVitals.js",[],"/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/store/reducer.js",["63"],"import * as actionTypes from './actions';\n\nconst initialState = {\n    availableFlights: null,\n    selectedFlight: null,\n    options: {passengers: 1, bags: 0, carryOn: 0, class: \"coach\"},\n    classPriceAdded: false,\n    totalPrice: 0,\n    bookedFlights: []\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.INIT_FLIGHTS:\n            return {\n                ...state,\n                availableFlights: action.flightData.data\n            }  \n        case actionTypes.ADD_FLIGHT: \n            const addFlight = {\n                carrier: action.flightData.carrier,\n                dCity: action.flightData.dCity,\n                aCity: action.flightData.aCity,\n                date: action.flightData.date,\n                price: action.flightData.price\n            }\n            return {\n                ...state,\n                selectedFlight: addFlight,\n                options: {passengers: 1, bags: 0, carryOn: 0, class: \"Coach\"},\n                classPriceAdded: false,\n                totalPrice: action.flightData.price\n            }\n        case actionTypes.REMOVE_FLIGHT:\n            console.log(\"Removed\");\n            return {\n                ...state,\n                selectedFlight: null,\n                options: {passengers: 1, bags: 0, carryOn: 0, class: \"Coach\"},\n                classPriceAdded: false,\n                totalPrice: 0\n            }\n\n        case actionTypes.PASSENGER_INCREMENT:\n            let val = Object.values(state.options);\n            val[0] += 1;\n            let flightPrice = state.totalPrice;\n            flightPrice = flightPrice + state.selectedFlight.price;\n            return {\n                ...state,\n                options: {passengers: val[0], bags: val[1], carryOn: val[2], class: val[3]},\n                totalPrice: flightPrice\n            }\n        case actionTypes.PASSENGER_DECREMENT:\n            let values = Object.values(state.options);\n            if (values[0] > 0) {\n                values[0] -= 1;\n            }\n            let flightPrice2 = state.totalPrice;\n            flightPrice2 -= state.selectedFlight.price;\n            return {\n                ...state,\n                options: {passengers: values[0], bags: values[1], carryOn: values[2], class: values[3]},\n                totalPrice: flightPrice2\n            }\n\n        case actionTypes.BAG_INCREMENT:\n            let v = Object.values(state.options);\n            v[1] += 1;\n            return {\n                ...state,\n                options: {passengers: v[0], bags: v[1], carryOn: v[2], class: v[3]},\n                totalPrice: state.totalPrice + 50\n            }\n        case actionTypes.BAG_DECREMENT:\n            let va = Object.values(state.options);\n            if (va[1] > 0) {\n                va[1] -= 1;\n            }\n            return {\n                ...state,\n                options: {passengers: va[0], bags: va[1], carryOn: va[2], class: va[3]},\n                totalPrice: state.totalPrice - 50\n            }\n\n        case actionTypes.CARRYON_INCREMENT:\n            let valu = Object.values(state.options);\n            valu[2] += 1;\n            return {\n                ...state,\n                options: {passengers: valu[0], bags: valu[1], carryOn: valu[2], class: valu[3]},\n                totalPrice: state.totalPrice + 30\n            }\n        case actionTypes.CARRYON_DECREMENT:\n            let value2 = Object.values(state.options);\n            if (value2[2] > 0) {\n                value2[2] -= 1;\n            }\n            return {\n                ...state,\n                options: {passengers: value2[0], bags: value2[1], carryOn: value2[2], class: value2[3]},\n                totalPrice: state.totalPrice - 30\n            }\n        case actionTypes.SET_CLASS: \n            let value3 = Object.values(state.options);\n            let classPrice = 0;\n            if (!state.classPriceAdded) {\n                if (action.val === \"First\") {\n                    classPrice = 200;\n                } else if (action.val === \"Second\") {\n                    classPrice = 100;\n                }\n            } else {\n                let currentSelection = action.val;\n                if (currentSelection === 'Coach') {\n                    if (state.options.class === \"Second\") {\n                        classPrice -= 100;\n                    } else {\n                        classPrice -= 200;\n                    }\n                }\n                if (currentSelection === 'Second') {\n                    if (state.options.class === \"Coach\") {\n                        classPrice += 100;\n                    } else {\n                        classPrice -= 100;\n                    }\n                }\n                if (currentSelection === 'First') {\n                    if (state.options.class === \"Coach\") {\n                        classPrice += 200;\n                    } else {\n                        classPrice += 100;\n                    }\n                }\n            }\n            \n            return {\n                ...state,\n                options: {passengers: value3[0], bags: value3[1], carryOn: value3[2], class: action.val},\n                classPriceAdded: true,\n                totalPrice: state.totalPrice + (classPrice * value3[0])\n            }\n        case actionTypes.UPDATE_PRICE:\n            let tPrice = state.totalPrice;\n            tPrice += action.value\n            return {\n                ...state,\n                totalPrice: tPrice\n            }\n        case actionTypes.BOOK_FLIGHT:\n            return {\n                ...state,\n                selectedFlight: null,\n                options: {passengers: 1, bags: 0, carryOn: 0, class: \"coach\"},\n                classPriceAdded: false,\n                totalPrice: 0\n            }\n        case actionTypes.REMOVE_BOOKED_FLIGHT:\n            return {\n                ...state,\n                bookedFlights: state.bookedFlights.filter(flight => flight.id !== action.removeId)\n            }\n        case actionTypes.INIT_BOOKED_FLIGHTS:\n            return {\n                ...state,\n                bookedFlights: action.flights.data\n            }\n    }\n    return state;\n}\n\nexport default reducer;\n\n","/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/store/actions.js",[],"/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/components/TopBar/TopBar.js",[],"/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/containers/BookedFlights/BookedFlights.js",[],"/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/containers/FlightSelector/FlightSelector.js",[],"/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/components/Modal/Modal.js",[],"/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/components/BookedFlight/BookedFlight.js",[],"/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/components/AvailableFlights/AvailableFlights.js",["64"],"import React from 'react';\nimport './AvailableFlights.css';\nimport { connect } from 'react-redux';\nimport Flight from '../Flight/Flight';\nimport * as actionTypes from '../../store/actions';\nimport axios from 'axios';\nimport refreshIcon from '../../assets/white-refresh.jpg';\n\nclass AvailableFlights extends React.Component {\n\n    componentDidMount() {\n        axios.get('https://peaceful-hollows-15789.herokuapp.com/availableFlights')\n        .then(response => {\n            this.props.onInitFlights(response);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    refreshFlights() {\n        axios.get('https://peaceful-hollows-15789.herokuapp.com/refreshFlights')\n        .then(response => {\n            this.props.onInitFlights(response);\n            this.props.onRemoveFlight();\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    resetSelectedFlight(flight) {\n        this.props.onRemoveFlight();\n        setTimeout(() => {\n            this.props.onSelectFlight(flight);\n        }, 10);\n        \n\n    }\n\n    render() {\n        let flights = \"\";\n        if (this.props.avFlights !== null) {\n            flights = this.props.avFlights.map((flight, i) => {\n                return <Flight \n                        carrier={flight.carrier}\n                        dCity={flight.dCity}\n                        aCity={flight.aCity}\n                        date={flight.date}\n                        price={flight.price}\n                        key={i}\n                        click={() => this.resetSelectedFlight(flight)}/>\n            })\n        }\n\n\n        return (\n            <div className=\"av-f-c\">\n                <div className=\"top-div\">\n                    <h3>Available Flights</h3>\n                    <button className=\"new-flights-btn\" onClick={() => this.refreshFlights()}>Refresh Flights ⟳</button>\n                </div>\n                <ul className=\"category-desc\">\n                        <li>Carrier</li>\n                        <li>Depature City</li>\n                        <li>Arrival City</li>\n                        <li>Date</li>\n                        <li>Price</li>\n                </ul>\n                <div className=\"AvFlightsContainer\">\n                    {flights} \n                </div>\n            </div>\n        )\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        avFlights: state.availableFlights,\n        selFlight: state.selectedFlight\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onInitFlights: (flightData) => dispatch({type: actionTypes.INIT_FLIGHTS, flightData}),\n        onSelectFlight: (flight) => dispatch({type: actionTypes.ADD_FLIGHT, flightData: {carrier: flight.carrier, dCity: flight.dCity, aCity: flight.aCity, date: flight.date, price: flight.price} }),\n        onRemoveFlight: () => dispatch({type: actionTypes.REMOVE_FLIGHT})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AvailableFlights);","/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/components/SelectFlight/SelectFlight.js",[],"/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/components/Flight/Flight.js",[],"/Users/alexforest/Desktop/GitHubProjects/FlightBooker/src/components/FlightOptions/FlightOptions.js",[],{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":13,"column":5,"nodeType":"71","messageId":"72","endLine":169,"endColumn":6},{"ruleId":"73","severity":1,"message":"74","line":7,"column":8,"nodeType":"75","messageId":"76","endLine":7,"endColumn":19},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-unused-vars","'refreshIcon' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]