{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexforest/Desktop/FlightBooker/src/containers/FlightSelector/FlightSelector.js\";\nimport React from 'react';\nimport AvailableFlights from '../../components/AvailableFlights/AvailableFlights';\nimport SelectFlight from '../../components/SelectFlight/SelectFlight';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../store/actions';\nimport './FlightSelector.css';\n\nconst FlightSelector = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(AvailableFlights, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SelectFlight, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_c = FlightSelector;\n\nconst mapStateToProps = state => {\n  return {\n    avFlights: state.availableFlights,\n    selFlight: state.selectedFlight\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onSelectFLight: (carrier, dCity, aCity, date, price) => dispatch({\n      type: actionTypes.ADD_FLIGHT,\n      flightData: {\n        carrier: carrier,\n        dCity: dCity,\n        aCity: aCity,\n        date: date,\n        price: price\n      }\n    }),\n    onRemoveFlight: () => dispatch({\n      type: actionTypes.REMOVE_FLIGHT\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlightSelector);\n\nvar _c;\n\n$RefreshReg$(_c, \"FlightSelector\");","map":{"version":3,"sources":["/Users/alexforest/Desktop/FlightBooker/src/containers/FlightSelector/FlightSelector.js"],"names":["React","AvailableFlights","SelectFlight","connect","actionTypes","FlightSelector","props","mapStateToProps","state","avFlights","availableFlights","selFlight","selectedFlight","mapDispatchToProps","dispatch","onSelectFLight","carrier","dCity","aCity","date","price","type","ADD_FLIGHT","flightData","onRemoveFlight","REMOVE_FLIGHT"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oDAA7B;AACA,OAAOC,YAAP,MAAyB,4CAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,qBAA7B;AACA,OAAO,sBAAP;;AAEA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAC9B,sBACI;AAAA,4BACI,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAPD;;KAAMD,c;;AASN,MAAME,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAO;AACHC,IAAAA,SAAS,EAAED,KAAK,CAACE,gBADd;AAEHC,IAAAA,SAAS,EAAEH,KAAK,CAACI;AAFd,GAAP;AAIH,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAO;AACHC,IAAAA,cAAc,EAAE,CAACC,OAAD,EAAUC,KAAV,EAAiBC,KAAjB,EAAwBC,IAAxB,EAA8BC,KAA9B,KAAwCN,QAAQ,CAAC;AAACO,MAAAA,IAAI,EAAEjB,WAAW,CAACkB,UAAnB;AAA+BC,MAAAA,UAAU,EAAE;AAACP,QAAAA,OAAO,EAAEA,OAAV;AAAmBC,QAAAA,KAAK,EAAEA,KAA1B;AAAiCC,QAAAA,KAAK,EAAEA,KAAxC;AAA+CC,QAAAA,IAAI,EAAEA,IAArD;AAA2DC,QAAAA,KAAK,EAAEA;AAAlE;AAA3C,KAAD,CAD7D;AAEHI,IAAAA,cAAc,EAAE,MAAMV,QAAQ,CAAC;AAACO,MAAAA,IAAI,EAAEjB,WAAW,CAACqB;AAAnB,KAAD;AAF3B,GAAP;AAIH,CALD;;AAOA,eAAetB,OAAO,CAACI,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CR,cAA7C,CAAf","sourcesContent":["import React from 'react';\nimport AvailableFlights from '../../components/AvailableFlights/AvailableFlights';\nimport SelectFlight from '../../components/SelectFlight/SelectFlight';\nimport { connect } from 'react-redux';\nimport * as actionTypes from '../../store/actions';\nimport './FlightSelector.css';\n\nconst FlightSelector = (props) => {\n    return (\n        <div>\n            <AvailableFlights />\n            <SelectFlight />\n        </div>\n    )   \n}\n\nconst mapStateToProps = state => {\n    return {\n        avFlights: state.availableFlights,\n        selFlight: state.selectedFlight\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSelectFLight: (carrier, dCity, aCity, date, price) => dispatch({type: actionTypes.ADD_FLIGHT, flightData: {carrier: carrier, dCity: dCity, aCity: aCity, date: date, price: price} }),\n        onRemoveFlight: () => dispatch({type: actionTypes.REMOVE_FLIGHT})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FlightSelector);"]},"metadata":{},"sourceType":"module"}