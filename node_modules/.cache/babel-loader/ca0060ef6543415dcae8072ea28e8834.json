{"ast":null,"code":"import * as actionTypes from './actions';\nconst initialState = {\n  availableFlights: [{\n    carrier: \"SW\",\n    dCity: \"LA\",\n    aCity: \"Lihue\",\n    date: \"1/1\",\n    price: \"$800\"\n  }, {\n    carrier: \"AM\",\n    dCity: \"CHI\",\n    aCity: \"DEN\",\n    date: \"1/5\",\n    price: \"$800\"\n  }, {\n    carrier: \"SW\",\n    dCity: \"LA\",\n    aCity: \"Lihue\",\n    date: \"1/1\",\n    price: \"$700\"\n  }, {\n    carrier: \"SW\",\n    dCity: \"LA\",\n    aCity: \"Lihue\",\n    date: \"1/1\",\n    price: \"$800\"\n  }, {\n    carrier: \"SW\",\n    dCity: \"LA\",\n    aCity: \"Lihue\",\n    date: \"1/1\",\n    price: \"$800\"\n  }],\n  selectedFlight: {},\n  options: {\n    passengers: 1,\n    bags: 0,\n    carryOn: 0,\n    class: \"coach\"\n  },\n  bookedFlights: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    /*case actionTypes.INIT_FLIGHTS:\n        const avFlights = [];\n        action.flights.map((ob, i) => {\n            return avFlights[i] = ob;\n        })\n        return {\n            ...state,\n            availableFligts: avFlights\n        }*/\n    case actionTypes.ADD_FLIGHT:\n      const addFlight = {\n        carrier: action.flightData.carrier,\n        dCity: action.flightData.dCity,\n        aCity: action.flightData.aCity,\n        date: action.flightData.date,\n        price: action.flightData.price\n      };\n      return { ...state,\n        selectedFlight: addFlight\n      };\n\n    case actionTypes.REMOVE_FLIGHT:\n      return { ...state,\n        selectedFlight: {}\n      };\n\n    case actionTypes.PASSENGER_INCREMENT:\n      let val = Object.values(state.options);\n      val[0] += 1;\n      return { ...state,\n        options: {\n          passengers: val[0],\n          bags: val[1],\n          carryOn: val[2],\n          class: val[3]\n        }\n      };\n\n    case actionTypes.PASSENGER_DECREMENT:\n      let values = Object.values(state.options);\n      console.log(values);\n\n      if (values[0] > 0) {\n        values[0] -= 1;\n      }\n\n      return { ...state,\n        options: {\n          passengers: values[0],\n          bags: values[1],\n          carryOn: values[2],\n          class: values[3]\n        }\n      };\n\n    case actionTypes.BAG_INCREMENT:\n      let v = Object.values(state.options);\n      v[1] += 1;\n      return { ...state,\n        options: {\n          passengers: v[0],\n          bags: v[1],\n          carryOn: v[2],\n          class: v[3]\n        }\n      };\n\n    case actionTypes.BAG_DECREMENT:\n      let va = Object.values(state.options);\n\n      if (va[1] > 0) {\n        va[1] -= 1;\n      }\n\n      return { ...state,\n        options: {\n          passengers: va[0],\n          bags: va[1],\n          carryOn: va[2],\n          class: va[3]\n        }\n      };\n\n    case actionTypes.CARRYON_INCREMENT:\n      let valu = Object.values(state.options);\n      valu[1] += 1;\n      return { ...state,\n        options: {\n          passengers: valu[0],\n          bags: valu[1],\n          carryOn: valu[2],\n          class: valu[3]\n        }\n      };\n\n    case actionTypes.CARRYON_DECREMENT:\n      let value2 = Object.values(state.options);\n\n      if (value2[1] > 0) {\n        value2[1] -= 1;\n      }\n\n      return { ...state,\n        options: {\n          passengers: value2[0],\n          bags: value2[1],\n          carryOn: value2[2],\n          class: value2[3]\n        }\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/alexforest/Desktop/flight-booker/src/store/reducer.js"],"names":["actionTypes","initialState","availableFlights","carrier","dCity","aCity","date","price","selectedFlight","options","passengers","bags","carryOn","class","bookedFlights","reducer","state","action","type","ADD_FLIGHT","addFlight","flightData","REMOVE_FLIGHT","PASSENGER_INCREMENT","val","Object","values","PASSENGER_DECREMENT","console","log","BAG_INCREMENT","v","BAG_DECREMENT","va","CARRYON_INCREMENT","valu","CARRYON_DECREMENT","value2"],"mappings":"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","sourcesContent":["import * as actionTypes from './actions';\n\nconst initialState = {\n    availableFlights: [\n        {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: \"$800\"},\n        {carrier: \"AM\", dCity: \"CHI\", aCity: \"DEN\", date: \"1/5\", price: \"$800\"},\n        {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: \"$700\"},\n        {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: \"$800\"},\n        {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: \"$800\"}\n      ],\n    selectedFlight: {},\n    options: {passengers: 1, bags: 0, carryOn: 0, class: \"coach\"},\n    bookedFlights: []\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        /*case actionTypes.INIT_FLIGHTS:\n            const avFlights = [];\n            action.flights.map((ob, i) => {\n                return avFlights[i] = ob;\n            })\n            return {\n                ...state,\n                availableFligts: avFlights\n            }*/\n        case actionTypes.ADD_FLIGHT: \n            const addFlight = {\n                carrier: action.flightData.carrier,\n                dCity: action.flightData.dCity,\n                aCity: action.flightData.aCity,\n                date: action.flightData.date,\n                price: action.flightData.price\n            }\n            return {\n                ...state,\n                selectedFlight: addFlight\n            }\n        case actionTypes.REMOVE_FLIGHT:\n            return {\n                ...state,\n                selectedFlight: {}\n            }\n\n        case actionTypes.PASSENGER_INCREMENT:\n            let val = Object.values(state.options);\n            val[0] += 1;\n            return {\n                ...state,\n                options: {passengers: val[0], bags: val[1], carryOn: val[2], class: val[3]}\n            }\n        case actionTypes.PASSENGER_DECREMENT:\n            let values = Object.values(state.options);\n            console.log(values);\n            if (values[0] > 0) {\n                values[0] -= 1;\n            }\n            return {\n                ...state,\n                options: {passengers: values[0], bags: values[1], carryOn: values[2], class: values[3]}\n            }\n\n        case actionTypes.BAG_INCREMENT:\n            let v = Object.values(state.options);\n            v[1] += 1;\n            return {\n                ...state,\n                options: {passengers: v[0], bags: v[1], carryOn: v[2], class: v[3]}\n            }\n        case actionTypes.BAG_DECREMENT:\n            let va = Object.values(state.options);\n            if (va[1] > 0) {\n                va[1] -= 1;\n            }\n            return {\n                ...state,\n                options: {passengers: va[0], bags: va[1], carryOn: va[2], class: va[3]}\n            }\n\n        case actionTypes.CARRYON_INCREMENT:\n            let valu = Object.values(state.options);\n            valu[1] += 1;\n            return {\n                ...state,\n                options: {passengers: valu[0], bags: valu[1], carryOn: valu[2], class: valu[3]}\n            }\n        case actionTypes.CARRYON_DECREMENT:\n            let value2 = Object.values(state.options);\n            if (value2[1] > 0) {\n                value2[1] -= 1;\n            }\n            return {\n                ...state,\n                options: {passengers: value2[0], bags: value2[1], carryOn: value2[2], class: value2[3]}\n            }\n        \n    }\n    return state;\n}\n\nexport default reducer;\n\n"]},"metadata":{},"sourceType":"module"}