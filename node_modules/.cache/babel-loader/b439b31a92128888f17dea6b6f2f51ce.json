{"ast":null,"code":"import * as actionTypes from './actions';\nconst initialState = {\n  availableFlights: [{\n    carrier: \"SW\",\n    dCity: \"LA\",\n    aCity: \"Lihue\",\n    date: \"1/1\",\n    price: 800\n  }, {\n    carrier: \"AM\",\n    dCity: \"CHI\",\n    aCity: \"DEN\",\n    date: \"1/5\",\n    price: 900\n  }, {\n    carrier: \"SW\",\n    dCity: \"LA\",\n    aCity: \"Lihue\",\n    date: \"1/1\",\n    price: 700\n  }, {\n    carrier: \"SW\",\n    dCity: \"LA\",\n    aCity: \"Lihue\",\n    date: \"1/1\",\n    price: 600\n  }, {\n    carrier: \"SW\",\n    dCity: \"LA\",\n    aCity: \"Lihue\",\n    date: \"1/1\",\n    price: 1200\n  }],\n  selectedFlight: null,\n  options: {\n    passengers: 1,\n    bags: 0,\n    carryOn: 0,\n    class: \"coach\"\n  },\n  totalPrice: 0,\n  bookedFlights: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    /*case actionTypes.INIT_FLIGHTS:\n        const avFlights = [];\n        action.flights.map((ob, i) => {\n            return avFlights[i] = ob;\n        })\n        return {\n            ...state,\n            availableFligts: avFlights\n        }*/\n    case actionTypes.ADD_FLIGHT:\n      const addFlight = {\n        carrier: action.flightData.carrier,\n        dCity: action.flightData.dCity,\n        aCity: action.flightData.aCity,\n        date: action.flightData.date,\n        price: action.flightData.price\n      };\n      return { ...state,\n        selectedFlight: addFlight,\n        totalPrice: action.flightData.price\n      };\n\n    case actionTypes.REMOVE_FLIGHT:\n      return { ...state,\n        selectedFlight: null,\n        options: {\n          passengers: 1,\n          bags: 0,\n          carryOn: 0,\n          class: \"coach\"\n        }\n      };\n\n    case actionTypes.PASSENGER_INCREMENT:\n      let val = Object.values(state.options);\n      val[0] += 1;\n      let flightPrice = state.totalPrice;\n      flightPrice = flightPrice + state.selectedFlight.price;\n      return { ...state,\n        options: {\n          passengers: val[0],\n          bags: val[1],\n          carryOn: val[2],\n          class: val[3]\n        },\n        totalPrice: flightPrice\n      };\n\n    case actionTypes.PASSENGER_DECREMENT:\n      let values = Object.values(state.options);\n\n      if (values[0] > 0) {\n        values[0] -= 1;\n      }\n\n      let flightPrice2 = state.totalPrice;\n      flightPrice2 -= state.selectedFlight.price;\n      return { ...state,\n        options: {\n          passengers: values[0],\n          bags: values[1],\n          carryOn: values[2],\n          class: values[3]\n        },\n        totalPrice: flightPrice2\n      };\n\n    case actionTypes.BAG_INCREMENT:\n      let v = Object.values(state.options);\n      v[1] += 1;\n      return { ...state,\n        options: {\n          passengers: v[0],\n          bags: v[1],\n          carryOn: v[2],\n          class: v[3]\n        }\n      };\n\n    case actionTypes.BAG_DECREMENT:\n      let va = Object.values(state.options);\n\n      if (va[1] > 0) {\n        va[1] -= 1;\n      }\n\n      return { ...state,\n        options: {\n          passengers: va[0],\n          bags: va[1],\n          carryOn: va[2],\n          class: va[3]\n        }\n      };\n\n    case actionTypes.CARRYON_INCREMENT:\n      let valu = Object.values(state.options);\n      valu[2] += 1;\n      return { ...state,\n        options: {\n          passengers: valu[0],\n          bags: valu[1],\n          carryOn: valu[2],\n          class: valu[3]\n        }\n      };\n\n    case actionTypes.CARRYON_DECREMENT:\n      let value2 = Object.values(state.options);\n\n      if (value2[2] > 0) {\n        value2[2] -= 1;\n      }\n\n      return { ...state,\n        options: {\n          passengers: value2[0],\n          bags: value2[1],\n          carryOn: value2[2],\n          class: value2[3]\n        }\n      };\n\n    case actionTypes.SET_CLASS:\n      let value3 = Object.values(state.options);\n      console.log(value3);\n      return { ...state,\n        options: {\n          passengers: value3[0],\n          bags: value3[1],\n          carryOn: value3[2],\n          class: action.val\n        }\n      };\n\n    case actionTypes.UPDATE_PRICE:\n      let tPrice = state.totalPrice;\n      tPrice += action.value;\n      return { ...state,\n        totalPrice: tPrice\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/alexforest/Desktop/flight-booker/src/store/reducer.js"],"names":["actionTypes","initialState","availableFlights","carrier","dCity","aCity","date","price","selectedFlight","options","passengers","bags","carryOn","class","totalPrice","bookedFlights","reducer","state","action","type","ADD_FLIGHT","addFlight","flightData","REMOVE_FLIGHT","PASSENGER_INCREMENT","val","Object","values","flightPrice","PASSENGER_DECREMENT","flightPrice2","BAG_INCREMENT","v","BAG_DECREMENT","va","CARRYON_INCREMENT","valu","CARRYON_DECREMENT","value2","SET_CLASS","value3","console","log","UPDATE_PRICE","tPrice","value"],"mappings":"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","sourcesContent":["import * as actionTypes from './actions';\n\nconst initialState = {\n    availableFlights: [\n        {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: 800},\n        {carrier: \"AM\", dCity: \"CHI\", aCity: \"DEN\", date: \"1/5\", price: 900},\n        {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: 700},\n        {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: 600},\n        {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: 1200}\n      ],\n    selectedFlight: null,\n    options: {passengers: 1, bags: 0, carryOn: 0, class: \"coach\"},\n    totalPrice: 0,\n    bookedFlights: []\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        /*case actionTypes.INIT_FLIGHTS:\n            const avFlights = [];\n            action.flights.map((ob, i) => {\n                return avFlights[i] = ob;\n            })\n            return {\n                ...state,\n                availableFligts: avFlights\n            }*/\n        case actionTypes.ADD_FLIGHT: \n            const addFlight = {\n                carrier: action.flightData.carrier,\n                dCity: action.flightData.dCity,\n                aCity: action.flightData.aCity,\n                date: action.flightData.date,\n                price: action.flightData.price\n            }\n            return {\n                ...state,\n                selectedFlight: addFlight,\n                totalPrice: action.flightData.price\n            }\n        case actionTypes.REMOVE_FLIGHT:\n            return {\n                ...state,\n                selectedFlight: null,\n                options: {passengers: 1, bags: 0, carryOn: 0, class: \"coach\"}\n            }\n\n        case actionTypes.PASSENGER_INCREMENT:\n            let val = Object.values(state.options);\n            val[0] += 1;\n            let flightPrice = state.totalPrice;\n            flightPrice = flightPrice + state.selectedFlight.price;\n            return {\n                ...state,\n                options: {passengers: val[0], bags: val[1], carryOn: val[2], class: val[3]},\n                totalPrice: flightPrice\n            }\n        case actionTypes.PASSENGER_DECREMENT:\n            let values = Object.values(state.options);\n            if (values[0] > 0) {\n                values[0] -= 1;\n            }\n            let flightPrice2 = state.totalPrice;\n            flightPrice2 -= state.selectedFlight.price;\n            return {\n                ...state,\n                options: {passengers: values[0], bags: values[1], carryOn: values[2], class: values[3]},\n                totalPrice: flightPrice2\n            }\n\n        case actionTypes.BAG_INCREMENT:\n            let v = Object.values(state.options);\n            v[1] += 1;\n            return {\n                ...state,\n                options: {passengers: v[0], bags: v[1], carryOn: v[2], class: v[3]}\n            }\n        case actionTypes.BAG_DECREMENT:\n            let va = Object.values(state.options);\n            if (va[1] > 0) {\n                va[1] -= 1;\n            }\n            return {\n                ...state,\n                options: {passengers: va[0], bags: va[1], carryOn: va[2], class: va[3]}\n            }\n\n        case actionTypes.CARRYON_INCREMENT:\n            let valu = Object.values(state.options);\n            valu[2] += 1;\n            return {\n                ...state,\n                options: {passengers: valu[0], bags: valu[1], carryOn: valu[2], class: valu[3]}\n            }\n        case actionTypes.CARRYON_DECREMENT:\n            let value2 = Object.values(state.options);\n            if (value2[2] > 0) {\n                value2[2] -= 1;\n            }\n            return {\n                ...state,\n                options: {passengers: value2[0], bags: value2[1], carryOn: value2[2], class: value2[3]}\n            }\n        case actionTypes.SET_CLASS: \n            let value3 = Object.values(state.options);\n            console.log( value3);\n            return {\n                ...state,\n                options: {passengers: value3[0], bags: value3[1], carryOn: value3[2], class: action.val}\n            }\n        case actionTypes.UPDATE_PRICE:\n            let tPrice = state.totalPrice;\n            tPrice += action.value\n            return {\n                ...state,\n                totalPrice: tPrice\n            }\n        \n    }\n    return state;\n}\n\nexport default reducer;\n\n"]},"metadata":{},"sourceType":"module"}