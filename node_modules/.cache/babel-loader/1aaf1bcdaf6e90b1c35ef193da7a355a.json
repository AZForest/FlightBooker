{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexforest/Desktop/FlightBookerArch/flight-booker/src/components/AvailableFlights/AvailableFlights.js\";\nimport React from 'react';\nimport './AvailableFlights.css';\nimport { connect } from 'react-redux';\nimport Flight from '../Flight/Flight';\nimport * as actionTypes from '../../store/actions';\nimport axios from 'axios';\nimport refreshIcon from '../../assets/white-refresh.jpg';\n\nclass AvailableFlights extends React.Component {\n  componentDidMount() {\n    axios.get('/availableFlights').then(response => {\n      this.props.onInitFlights(response);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  refreshFlights() {\n    axios.get('/refreshFlights').then(response => {\n      this.props.onInitFlights(response);\n      this.props.onRemoveFlight();\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  resetSelectedFlight(flight) {\n    this.props.onRemoveFlight();\n    setTimeout(() => {\n      console.log(\"hey\");\n      this.props.onSelectFlight(flight);\n    }, 500);\n  }\n\n  render() {\n    let flights = \"\";\n\n    if (this.props.avFlights !== null) {\n      console.log(this.props.avFlights);\n      flights = this.props.avFlights.map((flight, i) => {\n        return /*#__PURE__*/_jsxDEV(Flight, {\n          carrier: flight.carrier,\n          dCity: flight.dCity,\n          aCity: flight.aCity,\n          date: flight.date,\n          price: flight.price,\n          click: () => this.resetSelectedFlight(flight)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 24\n        }, this);\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Available Flights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"new-flights-btn\",\n        onClick: () => this.refreshFlights(),\n        children: \"Refresh Flights \\u27F3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"category-desc\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Carrier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Depature City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Arrival City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AvFlightsContainer\",\n        children: flights\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    avFlights: state.availableFlights,\n    selFlight: state.selectedFlight\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitFlights: flightData => dispatch({\n      type: actionTypes.INIT_FLIGHTS,\n      flightData\n    }),\n    onSelectFlight: flight => dispatch({\n      type: actionTypes.ADD_FLIGHT,\n      flightData: {\n        carrier: flight.carrier,\n        dCity: flight.dCity,\n        aCity: flight.aCity,\n        date: flight.date,\n        price: flight.price\n      }\n    }),\n    onRemoveFlight: () => dispatch({\n      type: actionTypes.REMOVE_FLIGHT\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AvailableFlights);","map":{"version":3,"sources":["/Users/alexforest/Desktop/FlightBookerArch/flight-booker/src/components/AvailableFlights/AvailableFlights.js"],"names":["React","connect","Flight","actionTypes","axios","refreshIcon","AvailableFlights","Component","componentDidMount","get","then","response","props","onInitFlights","catch","err","console","log","refreshFlights","onRemoveFlight","resetSelectedFlight","flight","setTimeout","onSelectFlight","render","flights","avFlights","map","i","carrier","dCity","aCity","date","price","mapStateToProps","state","availableFlights","selFlight","selectedFlight","mapDispatchToProps","dispatch","flightData","type","INIT_FLIGHTS","ADD_FLIGHT","REMOVE_FLIGHT"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './AvailableFlights.css';\nimport { connect } from 'react-redux';\nimport Flight from '../Flight/Flight';\nimport * as actionTypes from '../../store/actions';\nimport axios from 'axios';\nimport refreshIcon from '../../assets/white-refresh.jpg';\n\nclass AvailableFlights extends React.Component {\n\n    componentDidMount() {\n        axios.get('/availableFlights')\n        .then(response => {\n            this.props.onInitFlights(response);\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    refreshFlights() {\n        axios.get('/refreshFlights')\n        .then(response => {\n            this.props.onInitFlights(response);\n            this.props.onRemoveFlight();\n        })\n        .catch(err => {\n            console.log(err);\n        })\n    }\n\n    resetSelectedFlight(flight) {\n        this.props.onRemoveFlight();\n        setTimeout(() => {\n            console.log(\"hey\");\n            this.props.onSelectFlight(flight);\n        }, 500);\n        \n\n    }\n\n    render() {\n        let flights = \"\";\n        if (this.props.avFlights !== null) {\n            console.log(this.props.avFlights);\n            flights = this.props.avFlights.map((flight, i) => {\n                return <Flight \n                        carrier={flight.carrier}\n                        dCity={flight.dCity}\n                        aCity={flight.aCity}\n                        date={flight.date}\n                        price={flight.price}\n                        key={i}\n                        click={() => this.resetSelectedFlight(flight)}/>\n            })\n        }\n\n\n        return (\n            <React.Fragment>\n                <h3>Available Flights</h3>\n                <button className=\"new-flights-btn\" onClick={() => this.refreshFlights()}>Refresh Flights ⟳</button>\n                <ul className=\"category-desc\">\n                        <li>Carrier</li>\n                        <li>Depature City</li>\n                        <li>Arrival City</li>\n                        <li>Date</li>\n                        <li>Price</li>\n                </ul>\n                <div className=\"AvFlightsContainer\">\n                    {flights} \n                </div>\n            </React.Fragment>\n        )\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        avFlights: state.availableFlights,\n        selFlight: state.selectedFlight\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onInitFlights: (flightData) => dispatch({type: actionTypes.INIT_FLIGHTS, flightData}),\n        onSelectFlight: (flight) => dispatch({type: actionTypes.ADD_FLIGHT, flightData: {carrier: flight.carrier, dCity: flight.dCity, aCity: flight.aCity, date: flight.date, price: flight.price} }),\n        onRemoveFlight: () => dispatch({type: actionTypes.REMOVE_FLIGHT})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AvailableFlights);"]},"metadata":{},"sourceType":"module"}