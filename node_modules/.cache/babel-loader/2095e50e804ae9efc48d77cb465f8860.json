{"ast":null,"code":"import * as actionTypes from './actions';\nconst initialState = {\n  /* availableFlights: [\n      {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: 800},\n      {carrier: \"AM\", dCity: \"CHI\", aCity: \"DEN\", date: \"1/5\", price: 900},\n      {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: 700},\n      {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: 600},\n      {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: 1200},\n      {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: 800},\n      {carrier: \"AM\", dCity: \"CHI\", aCity: \"DEN\", date: \"1/5\", price: 900},\n      {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: 700},\n      {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: 600},\n      {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: 1200}\n    ], */\n  availableFlights: null,\n  selectedFlight: null,\n  options: {\n    passengers: 1,\n    bags: 0,\n    carryOn: 0,\n    class: \"coach\"\n  },\n  classPriceAdded: false,\n  totalPrice: 0,\n  bookedFlights: []\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.INIT_FLIGHTS:\n      return { ...state,\n        availableFlights: action.flightData\n      };\n\n    case actionTypes.ADD_FLIGHT:\n      const addFlight = {\n        carrier: action.flightData.carrier,\n        dCity: action.flightData.dCity,\n        aCity: action.flightData.aCity,\n        date: action.flightData.date,\n        price: action.flightData.price\n      };\n      return { ...state,\n        selectedFlight: addFlight,\n        options: {\n          passengers: 1,\n          bags: 0,\n          carryOn: 0,\n          class: \"Coach\"\n        },\n        classPriceAdded: false,\n        totalPrice: action.flightData.price\n      };\n\n    case actionTypes.REMOVE_FLIGHT:\n      return { ...state,\n        selectedFlight: null,\n        options: {\n          passengers: 1,\n          bags: 0,\n          carryOn: 0,\n          class: \"Coach\"\n        },\n        classPriceAdded: false,\n        totalPrice: 0\n      };\n\n    case actionTypes.PASSENGER_INCREMENT:\n      let val = Object.values(state.options);\n      val[0] += 1;\n      let flightPrice = state.totalPrice;\n      flightPrice = flightPrice + state.selectedFlight.price;\n      return { ...state,\n        options: {\n          passengers: val[0],\n          bags: val[1],\n          carryOn: val[2],\n          class: val[3]\n        },\n        totalPrice: flightPrice\n      };\n\n    case actionTypes.PASSENGER_DECREMENT:\n      let values = Object.values(state.options);\n\n      if (values[0] > 0) {\n        values[0] -= 1;\n      }\n\n      let flightPrice2 = state.totalPrice;\n      flightPrice2 -= state.selectedFlight.price;\n      return { ...state,\n        options: {\n          passengers: values[0],\n          bags: values[1],\n          carryOn: values[2],\n          class: values[3]\n        },\n        totalPrice: flightPrice2\n      };\n\n    case actionTypes.BAG_INCREMENT:\n      let v = Object.values(state.options);\n      v[1] += 1;\n      return { ...state,\n        options: {\n          passengers: v[0],\n          bags: v[1],\n          carryOn: v[2],\n          class: v[3]\n        },\n        totalPrice: state.totalPrice + 50\n      };\n\n    case actionTypes.BAG_DECREMENT:\n      let va = Object.values(state.options);\n\n      if (va[1] > 0) {\n        va[1] -= 1;\n      }\n\n      return { ...state,\n        options: {\n          passengers: va[0],\n          bags: va[1],\n          carryOn: va[2],\n          class: va[3]\n        },\n        totalPrice: state.totalPrice - 50\n      };\n\n    case actionTypes.CARRYON_INCREMENT:\n      let valu = Object.values(state.options);\n      valu[2] += 1;\n      return { ...state,\n        options: {\n          passengers: valu[0],\n          bags: valu[1],\n          carryOn: valu[2],\n          class: valu[3]\n        },\n        totalPrice: state.totalPrice + 30\n      };\n\n    case actionTypes.CARRYON_DECREMENT:\n      let value2 = Object.values(state.options);\n\n      if (value2[2] > 0) {\n        value2[2] -= 1;\n      }\n\n      return { ...state,\n        options: {\n          passengers: value2[0],\n          bags: value2[1],\n          carryOn: value2[2],\n          class: value2[3]\n        },\n        totalPrice: state.totalPrice - 30\n      };\n\n    case actionTypes.SET_CLASS:\n      let value3 = Object.values(state.options);\n      let classPrice = 0;\n\n      if (!state.classPriceAdded) {\n        if (action.val === \"First\") {\n          classPrice = 200;\n        } else if (action.val === \"Second\") {\n          classPrice = 100;\n        }\n      } else {\n        let currentSelection = action.val;\n\n        if (currentSelection === 'Coach') {\n          if (state.options.class === \"Second\") {\n            classPrice -= 100;\n          } else {\n            classPrice -= 200;\n          }\n        }\n\n        if (currentSelection === 'Second') {\n          if (state.options.class === \"Coach\") {\n            classPrice += 100;\n          } else {\n            classPrice -= 100;\n          }\n        }\n\n        if (currentSelection === 'First') {\n          if (state.options.class === \"Coach\") {\n            classPrice += 200;\n          } else {\n            classPrice += 100;\n          }\n        }\n      }\n\n      return { ...state,\n        options: {\n          passengers: value3[0],\n          bags: value3[1],\n          carryOn: value3[2],\n          class: action.val\n        },\n        classPriceAdded: true,\n        totalPrice: state.totalPrice + classPrice\n      };\n\n    case actionTypes.UPDATE_PRICE:\n      let tPrice = state.totalPrice;\n      tPrice += action.value;\n      return { ...state,\n        totalPrice: tPrice\n      };\n\n    case actionTypes.BOOK_FLIGHT:\n      const newFlight = {\n        carrier: action.flightData.carrier,\n        dCity: action.flightData.dCity,\n        aCity: action.flightData.aCity,\n        date: action.flightData.date,\n        passengers: action.flightData.passengers,\n        bags: action.flightData.bags,\n        carryOn: action.flightData.carryOn,\n        class: action.flightData.class,\n        totalPrice: action.flightData.totalPrice,\n        id: Math.random()\n      };\n      return { ...state,\n        selectedFlight: null,\n        options: {\n          passengers: 1,\n          bags: 0,\n          carryOn: 0,\n          class: \"coach\"\n        },\n        classPriceAdded: false,\n        totalPrice: 0,\n        bookedFlights: state.bookedFlights.concat(newFlight)\n      };\n\n    case actionTypes.REMOVE_BOOKED_FLIGHT:\n      return { ...state,\n        bookedFlights: state.bookedFlights.filter(flight => flight.id !== action.removeId)\n      };\n  }\n\n  return state;\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/alexforest/Desktop/FlightBookerArch/flight-booker/src/store/reducer.js"],"names":["actionTypes","initialState","availableFlights","selectedFlight","options","passengers","bags","carryOn","class","classPriceAdded","totalPrice","bookedFlights","reducer","state","action","type","INIT_FLIGHTS","flightData","ADD_FLIGHT","addFlight","carrier","dCity","aCity","date","price","REMOVE_FLIGHT","PASSENGER_INCREMENT","val","Object","values","flightPrice","PASSENGER_DECREMENT","flightPrice2","BAG_INCREMENT","v","BAG_DECREMENT","va","CARRYON_INCREMENT","valu","CARRYON_DECREMENT","value2","SET_CLASS","value3","classPrice","currentSelection","UPDATE_PRICE","tPrice","value","BOOK_FLIGHT","newFlight","id","Math","random","concat","REMOVE_BOOKED_FLIGHT","filter","flight","removeId"],"mappings":"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","sourcesContent":["import * as actionTypes from './actions';\n\nconst initialState = {\n    /* availableFlights: [\n        {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: 800},\n        {carrier: \"AM\", dCity: \"CHI\", aCity: \"DEN\", date: \"1/5\", price: 900},\n        {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: 700},\n        {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: 600},\n        {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: 1200},\n        {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: 800},\n        {carrier: \"AM\", dCity: \"CHI\", aCity: \"DEN\", date: \"1/5\", price: 900},\n        {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: 700},\n        {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: 600},\n        {carrier: \"SW\", dCity: \"LA\", aCity: \"Lihue\", date: \"1/1\", price: 1200}\n      ], */\n    availableFlights: null,\n    selectedFlight: null,\n    options: {passengers: 1, bags: 0, carryOn: 0, class: \"coach\"},\n    classPriceAdded: false,\n    totalPrice: 0,\n    bookedFlights: []\n}\n\nconst reducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.INIT_FLIGHTS:\n            return {\n                ...state,\n                availableFlights: action.flightData\n            }  \n        case actionTypes.ADD_FLIGHT: \n            const addFlight = {\n                carrier: action.flightData.carrier,\n                dCity: action.flightData.dCity,\n                aCity: action.flightData.aCity,\n                date: action.flightData.date,\n                price: action.flightData.price\n            }\n            return {\n                ...state,\n                selectedFlight: addFlight,\n                options: {passengers: 1, bags: 0, carryOn: 0, class: \"Coach\"},\n                classPriceAdded: false,\n                totalPrice: action.flightData.price\n            }\n        case actionTypes.REMOVE_FLIGHT:\n            return {\n                ...state,\n                selectedFlight: null,\n                options: {passengers: 1, bags: 0, carryOn: 0, class: \"Coach\"},\n                classPriceAdded: false,\n                totalPrice: 0\n            }\n\n        case actionTypes.PASSENGER_INCREMENT:\n            let val = Object.values(state.options);\n            val[0] += 1;\n            let flightPrice = state.totalPrice;\n            flightPrice = flightPrice + state.selectedFlight.price;\n            return {\n                ...state,\n                options: {passengers: val[0], bags: val[1], carryOn: val[2], class: val[3]},\n                totalPrice: flightPrice\n            }\n        case actionTypes.PASSENGER_DECREMENT:\n            let values = Object.values(state.options);\n            if (values[0] > 0) {\n                values[0] -= 1;\n            }\n            let flightPrice2 = state.totalPrice;\n            flightPrice2 -= state.selectedFlight.price;\n            return {\n                ...state,\n                options: {passengers: values[0], bags: values[1], carryOn: values[2], class: values[3]},\n                totalPrice: flightPrice2\n            }\n\n        case actionTypes.BAG_INCREMENT:\n            let v = Object.values(state.options);\n            v[1] += 1;\n            return {\n                ...state,\n                options: {passengers: v[0], bags: v[1], carryOn: v[2], class: v[3]},\n                totalPrice: state.totalPrice + 50\n            }\n        case actionTypes.BAG_DECREMENT:\n            let va = Object.values(state.options);\n            if (va[1] > 0) {\n                va[1] -= 1;\n            }\n            return {\n                ...state,\n                options: {passengers: va[0], bags: va[1], carryOn: va[2], class: va[3]},\n                totalPrice: state.totalPrice - 50\n            }\n\n        case actionTypes.CARRYON_INCREMENT:\n            let valu = Object.values(state.options);\n            valu[2] += 1;\n            return {\n                ...state,\n                options: {passengers: valu[0], bags: valu[1], carryOn: valu[2], class: valu[3]},\n                totalPrice: state.totalPrice + 30\n            }\n        case actionTypes.CARRYON_DECREMENT:\n            let value2 = Object.values(state.options);\n            if (value2[2] > 0) {\n                value2[2] -= 1;\n            }\n            return {\n                ...state,\n                options: {passengers: value2[0], bags: value2[1], carryOn: value2[2], class: value2[3]},\n                totalPrice: state.totalPrice - 30\n            }\n        case actionTypes.SET_CLASS: \n            let value3 = Object.values(state.options);\n            let classPrice = 0;\n            if (!state.classPriceAdded) {\n                if (action.val === \"First\") {\n                    classPrice = 200;\n                } else if (action.val === \"Second\") {\n                    classPrice = 100;\n                }\n            } else {\n                let currentSelection = action.val;\n                if (currentSelection === 'Coach') {\n                    if (state.options.class === \"Second\") {\n                        classPrice -= 100;\n                    } else {\n                        classPrice -= 200;\n                    }\n                }\n                if (currentSelection === 'Second') {\n                    if (state.options.class === \"Coach\") {\n                        classPrice += 100;\n                    } else {\n                        classPrice -= 100;\n                    }\n                }\n                if (currentSelection === 'First') {\n                    if (state.options.class === \"Coach\") {\n                        classPrice += 200;\n                    } else {\n                        classPrice += 100;\n                    }\n                }\n            }\n            \n            return {\n                ...state,\n                options: {passengers: value3[0], bags: value3[1], carryOn: value3[2], class: action.val},\n                classPriceAdded: true,\n                totalPrice: state.totalPrice + classPrice\n            }\n        case actionTypes.UPDATE_PRICE:\n            let tPrice = state.totalPrice;\n            tPrice += action.value\n            return {\n                ...state,\n                totalPrice: tPrice\n            }\n        case actionTypes.BOOK_FLIGHT:\n            const newFlight = {\n                carrier: action.flightData.carrier, \n                dCity: action.flightData.dCity, \n                aCity: action.flightData.aCity, \n                date: action.flightData.date, \n                passengers: action.flightData.passengers,\n                bags: action.flightData.bags,\n                carryOn: action.flightData.carryOn,\n                class: action.flightData.class,\n                totalPrice: action.flightData.totalPrice,\n                id: Math.random()\n            }\n            return {\n                ...state,\n                selectedFlight: null,\n                options: {passengers: 1, bags: 0, carryOn: 0, class: \"coach\"},\n                classPriceAdded: false,\n                totalPrice: 0,\n                bookedFlights: state.bookedFlights.concat(newFlight)\n            }\n        case actionTypes.REMOVE_BOOKED_FLIGHT:\n            return {\n                ...state,\n                bookedFlights: state.bookedFlights.filter(flight => flight.id !== action.removeId)\n            }\n    }\n    return state;\n}\n\nexport default reducer;\n\n"]},"metadata":{},"sourceType":"module"}