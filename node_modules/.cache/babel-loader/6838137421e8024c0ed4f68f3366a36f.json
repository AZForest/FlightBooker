{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/alexforest/Desktop/FlightBookerArch/flight-booker/src/components/AvailableFlights/AvailableFlights.js\";\nimport React from 'react';\nimport './AvailableFlights.css';\nimport { connect } from 'react-redux';\nimport Flight from '../Flight/Flight';\nimport * as actionTypes from '../../store/actions';\nimport axios from 'axios';\n\nclass AvailableFlights extends React.Component {\n  componentDidMount() {\n    axios.get('/availableFlights').then(response => {\n      console.log(response);\n      this.props.onInitFlights(response);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Available Flights\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"category-desc\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Carrier\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Depature City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Arrival City\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"AvFlightsContainer\",\n        children: this.props.avFlights.map((flight, i) => {\n          return /*#__PURE__*/_jsxDEV(Flight, {\n            carrier: flight.carrier,\n            dCity: flight.dCity,\n            aCity: flight.aCity,\n            date: flight.date,\n            price: flight.price,\n            click: () => this.props.onSelectFlight(flight)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 36\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    avFlights: state.availableFlights,\n    selFlight: state.selectedFlight\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onInitFlights: flightData => dispatch({\n      type: actionTypes.INIT_FLIGHTS,\n      flightData\n    }),\n    onSelectFlight: flight => dispatch({\n      type: actionTypes.ADD_FLIGHT,\n      flightData: {\n        carrier: flight.carrier,\n        dCity: flight.dCity,\n        aCity: flight.aCity,\n        date: flight.date,\n        price: flight.price\n      }\n    }),\n    onRemoveFlight: () => dispatch({\n      type: actionTypes.REMOVE_FLIGHT\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AvailableFlights);","map":{"version":3,"sources":["/Users/alexforest/Desktop/FlightBookerArch/flight-booker/src/components/AvailableFlights/AvailableFlights.js"],"names":["React","connect","Flight","actionTypes","axios","AvailableFlights","Component","componentDidMount","get","then","response","console","log","props","onInitFlights","render","avFlights","map","flight","i","carrier","dCity","aCity","date","price","onSelectFlight","mapStateToProps","state","availableFlights","selFlight","selectedFlight","mapDispatchToProps","dispatch","flightData","type","INIT_FLIGHTS","ADD_FLIGHT","onRemoveFlight","REMOVE_FLIGHT"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './AvailableFlights.css';\nimport { connect } from 'react-redux';\nimport Flight from '../Flight/Flight';\nimport * as actionTypes from '../../store/actions';\nimport axios from 'axios';\n\nclass AvailableFlights extends React.Component {\n\n    componentDidMount() {\n        axios.get('/availableFlights')\n        .then(response => {\n            console.log(response);\n            this.props.onInitFlights(response);\n        })\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <h3>Available Flights</h3>\n                <ul className=\"category-desc\">\n                        <li>Carrier</li>\n                        <li>Depature City</li>\n                        <li>Arrival City</li>\n                        <li>Date</li>\n                        <li>Price</li>\n                </ul>\n                <div className=\"AvFlightsContainer\">\n                    \n                        {this.props.avFlights.map((flight, i) => {\n                            return <Flight \n                                    carrier={flight.carrier}\n                                    dCity={flight.dCity}\n                                    aCity={flight.aCity}\n                                    date={flight.date}\n                                    price={flight.price}\n                                    key={i}\n                                    click={() => this.props.onSelectFlight(flight)}/>\n                        })}\n                </div>\n            </React.Fragment>\n        )\n    }\n    \n}\n\nconst mapStateToProps = state => {\n    return {\n        avFlights: state.availableFlights,\n        selFlight: state.selectedFlight\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onInitFlights: (flightData) => dispatch({type: actionTypes.INIT_FLIGHTS, flightData}),\n        onSelectFlight: (flight) => dispatch({type: actionTypes.ADD_FLIGHT, flightData: {carrier: flight.carrier, dCity: flight.dCity, aCity: flight.aCity, date: flight.date, price: flight.price} }),\n        onRemoveFlight: () => dispatch({type: actionTypes.REMOVE_FLIGHT})\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AvailableFlights);"]},"metadata":{},"sourceType":"module"}